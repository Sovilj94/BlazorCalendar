@using System.Globalization
@using BlazorCalendar.Models
@using BlazorCalendar.Models.ViewModel
@using BlazorCalendar.Services
@using BlazorCalendar.Styles
@using BlazorCalendar.CalendarComponents


@inherits CalendarBase

<div class="weekly-calendar" style="@Style">

    <TimeSideBarVM TimeSideBar="WeekCalendar.TimeSideBar ">
    </TimeSideBarVM>

    @for (int i = 0; i < WeekCalendar.DayHeader.Count; i++)
    {
        <div class="day-header-column" style="grid-column-start: @(i+2);">
            <DayHeaderVM DayHeader="WeekCalendar.DayHeader[i]">
            </DayHeaderVM>
        </div>
    }

    <AllDayTasksVM DayClick="DayClick"
                   Draggable="Draggable"
                   DragStart="DragStart"
                   DropTask="DropTask"
                   DropTaskAllDay="DropTaskAllDay"
                   EmptyDayClick="EmptyDayClick"
                   TaskClick="TaskClick"
                   AllDay="WeekCalendar.AllDay">
    </AllDayTasksVM>

    @for (int i = 0; i < WeekCalendar.DayCalendar.Count; i++)
    {
        <div class="day-column" style="grid-column-start: @(i+2);">
            <DayColumnVM DayCalendar="WeekCalendar.DayCalendar[i]"
                         Draggable="Draggable"
                         DragStart="DragStart"
                         DropTask="DropTask"
                         EmptyDayClick="EmptyDayClick"
                         TaskClick="TaskClick"
                         DayClick="DayClick">
            </DayColumnVM>
        </div>
    }

</div>

@code {

    [Parameter]
    public WeekCalendarViewModel WeekCalendar { get; set; }

    [Parameter]
    public TimeDivisionEnum TimeDivisionEnum { get; set; }

    [Parameter]
    public bool HighlightToday { get; set; } = false;

    [Parameter]
    public EventCallback<int> OutsideCurrentMonthClick { get; set; }

    [Parameter]
    public EventCallback<ClickEmptyDayParameter> DayClick { get; set; }

    [Parameter]
    public EventCallback<ClickEmptyDayParameter> EmptyDayClick { get; set; }

    [Parameter]
    public EventCallback<ClickTaskParameter> TaskClick { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DragStart { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DropTask { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DropTaskAllDay { get;set; }
}