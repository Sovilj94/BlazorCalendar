@using BlazorCalendar.Models
@using BlazorCalendar.Models.ViewModel
@using BlazorCalendar.Styles
@using BlazorCalendar.CalendarComponenetsVM


<div class="all-day-grid">
    <div class="title" style="grid-row-start: 1; grid-column-start: 1; font-size:small">All day</div>
    @for (int column = 0; column < 7; column++)
    {
        AllDay.TimeCell = new TimeCellViewModel();
        AllDay.TimeCell.IsAllDayTimesCell = true;
        AllDay.TimeCell.Time = AllDay.FirstDateWeek.AddDays(column);
        AllDay.TimeCell.CSSGridPosition = $"grid-row:1 / span 5; grid-column-start:{column + 2}; height:100px; border-right:1px solid #ccc";
        <TimeCell DayClick="DayClick"
                    EmptyDayClick="EmptyDayClick"
                    Draggable="Draggable"
                    DropTask="DropTask"
                    DropTaskAllDay="DropTaskAllDay"
                    TimeCellViewModel="AllDay.TimeCell">
        </TimeCell>
    }
    @if (AllDay.Tasks is not null && AllDay.Tasks.Count > 0)
    {
        for (var k = 0; k < AllDay.Tasks.Count; k++)
        {
            Tasks t = AllDay.Tasks[k];

            if (t.DateStart.TimeOfDay == TimeSpan.Zero && t.DateEnd.TimeOfDay == TimeSpan.Zero)
            {
                AllDay.GridItem = new GridItemViewModel();
                AllDay.GridItem.Task = t;
                AllDay.GridItem.Day = AllDay.Day;
                AllDay.GridItem.TaskColor = Colors.GetHatching(t.FillStyle, t.Color);
                AllDay.GridItem.TaskColor = $"{AllDay.GridItem.TaskColor};color:{t.ForeColor}";

                AllDay.GridItem.ClassPin = string.IsNullOrWhiteSpace(t.Comment) ? null : " pin";
                AllDay.GridItem.ClassPointer = " cursor-pointer";

                string CSSGridPosition = $"grid-row-start:{t.RowStart} ;grid-column:{t.ColumnStart} / span {t.ColumnEnd - t.ColumnStart} ;";

                AllDay.GridItem.CSSGridPosition = CSSGridPosition;

                <GridItem GridItemViewModel="AllDay.GridItem"
                            Draggable="Draggable"
                            DragStart="DragStart"
                            TaskClick="TaskClick">
                </GridItem>
            }
        }
    }
</div>
@code {

    [Parameter]
    public AllDayViewModel AllDay { get; set; }

    [Parameter]
    public bool Draggable { get; set; }

    [Parameter]
    public EventCallback<ClickEmptyDayParameter> DayClick { get; set; }

    [Parameter]
    public EventCallback<ClickEmptyDayParameter> EmptyDayClick { get; set; }

    [Parameter]
    public EventCallback<ClickTaskParameter> TaskClick { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DragStart { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DropTask { get; set; }

    [Parameter]
    public EventCallback<DragDropParameter> DropTaskAllDay { get; set; }
}
